[n_det_max]
type: Det_number_max
doc: Maximum number of determinants in the wave function
interface: ezfio,provider,ocaml
default: 1000000

[n_det_print_wf]
type: Det_number_max
doc: Maximum number of determinants to be printed with the program print_wf
interface: ezfio,provider,ocaml
default: 10000

[n_states]
type: States_number
doc: Number of states to consider
interface: ezfio,provider,ocaml
default: 1

[read_wf]
type: logical
doc: If |true|, read the wave function from the |EZFIO| file
interface: ezfio,provider,ocaml
default: False

[pruning]
type: float
doc: If p>0., remove p*Ndet determinants at every iteration
interface: ezfio,provider,ocaml
default: 0.

[s2_eig]
type: logical
doc: Force the wave function to be an eigenfunction of |S^2|
interface: ezfio,provider,ocaml
default: True

[weight_one_e_dm]
type: integer
doc: Weight used in the calculation of the one-electron density matrix. 0: 1./(c_0^2), 1: 1/N_states, 2: input state-average weight, 3: 1/(Norm_L3(Psi))
interface: ezfio,provider,ocaml
default: 2

[weight_selection]
type: integer
doc: Weight used in the selection. 0: input state-average weight, 1: 1./(c_0^2), 2: rPT2 matching, 3: variance matching, 4: variance and rPT2 matching, 5: variance minimization and matching, 6: CI coefficients 7: input state-average multiplied by variance and rPT2 matching 8: input state-average multiplied by rPT2 matching 9: input state-average multiplied by variance matching
interface: ezfio,provider,ocaml
default: 1

[threshold_generators]
type: Threshold
doc: Thresholds on generators (fraction of the square of the norm) 
interface: ezfio,provider,ocaml
default: 0.999

[n_int]
interface: ezfio
doc: Number of integers required to represent bitstrings (set in module :ref:`module_bitmask`)
type: N_int_number

[bit_kind]
interface: ezfio
doc: (set in module :ref:`module_bitmask`)
type: Bit_kind

[mo_label]
interface: ezfio
doc: Label of the |MOs| on which the determinants are expressed
type: character*(64)

[n_det]
interface: ezfio
doc: Number of determinants in the current wave function
type: integer

[n_det_qp_edit]
interface: ezfio
doc: Number of determinants to print in qp_edit
type: integer

[psi_coef]
interface: ezfio
doc: Coefficients of the wave function
type: double precision 
size: (determinants.n_det,determinants.n_states)

[psi_coef_complex]
interface: ezfio
doc: Coefficients of the wave function
type: double precision 
size: (2,determinants.n_det,determinants.n_states)

[psi_det]
interface: ezfio
doc: Determinants of the variational space
type: integer*8
size: (determinants.n_int*determinants.bit_kind/8,2,determinants.n_det)

[psi_coef_qp_edit]
interface: ezfio
doc: Coefficients of the wave function
type: double precision 
size: (determinants.n_det_qp_edit,determinants.n_states)

[psi_coef_complex_qp_edit]
interface: ezfio
doc: Coefficients of the wave function
type: double precision 
size: (2,determinants.n_det_qp_edit,determinants.n_states)

[psi_det_qp_edit]
interface: ezfio
doc: Determinants of the variational space
type: integer*8
size: (determinants.n_int*determinants.bit_kind/8,2,determinants.n_det_qp_edit)

[expected_s2]
interface: ezfio
doc: Expected value of |S^2|
type: double precision

[target_energy]
interface: ezfio,provider,ocaml
doc: Energy that should be obtained when truncating the wave function (optional)
type: Energy
default: 0.

[state_average_weight]
type: double precision
doc: Weight of the states in state-average calculations.
interface: ezfio
size: (determinants.n_states)

[selection_factor]
type: double precision
doc: f such that the number of determinants to add is f * N_det * sqrt(N_states)
interface: ezfio,provider,ocaml
default: 1.

[thresh_sym]
type: Threshold
doc: Thresholds to check if a determinant is connected with HF 
interface: ezfio,provider,ocaml
default: 1.e-15

[pseudo_sym]
type: logical
doc: If |true|, discard any Slater determinants with an interaction smaller than thresh_sym with HF. 
interface: ezfio,provider,ocaml
default: False

[backup_determinants_dir]
type: logical
doc: If |true|, make a copy of the existing determinants directory before saving a new wavefunction.
interface: ezfio,provider,ocaml
default: True
