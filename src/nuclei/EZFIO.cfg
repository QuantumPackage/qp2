[nucl_num]
doc: Number of nuclei
type: integer
interface: ezfio, provider

[nucl_label]
doc:  Nuclear labels
type: character*(32) 
size: (nuclei.nucl_num)
interface: ezfio, provider

[nucl_charge]
doc: Nuclear charges
type:double precision
size: (nuclei.nucl_num)
interface: ezfio, provider

[nucl_coord]
doc:  Nuclear coordinates in the format (:, {x,y,z})
type: double precision 
size: (nuclei.nucl_num,3)
interface: ezfio

[io_nuclear_repulsion]
doc: Read/Write Nuclear Repulsion from/to disk [ Write | Read | None ]
type: Disk_access
interface: ezfio,provider,ocaml
default: None

[nuclear_repulsion]
doc: Nuclear repulsion (Computed automaticaly or Read in the |EZFIO|)
type:double precision
interface: ezfio

[is_complex]
type: logical
doc: If true, the calculation uses periodic boundary conditions
interface: ezfio, provider, ocaml
default: false

[io_kconserv]
doc: Read/Write kconserv array from/to disk [ Write | Read | None ]
type: Disk_access
interface: ezfio,provider,ocaml
default: None

[kpt_num]
doc: Number of k-points
type: integer
interface: ezfio, provider, ocaml
default: 1

[kpt_pair_num]
doc: Number of k-point pairs
type: integer
interface: ezfio

[kconserv]
type: integer
doc: array containing information about k-point symmetry
size: (nuclei.kpt_num,nuclei.kpt_num,nuclei.kpt_num)
interface: ezfio
