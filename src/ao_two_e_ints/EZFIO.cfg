[io_ao_two_e_integrals]
type: Disk_access
doc: Read/Write |AO| integrals from/to disk [ Write | Read | None ] 
interface: ezfio,provider,ocaml
default: None

[ao_integrals_threshold]
type: Threshold
doc: If | (pq|rs) | < `ao_integrals_threshold` then (pq|rs) is zero
interface: ezfio,provider,ocaml
default: 1.e-15
ezfio_name: threshold_ao

[do_direct_integrals]
type: logical
doc: Compute integrals on the fly (very slow, only for debugging)
interface: ezfio,provider,ocaml
default: False
ezfio_name: direct

[df_num]
type: integer
doc: Size of df basis
interface: ezfio, provider

[io_df_ao_integrals]
type: Disk_access
doc: Read/Write df |AO| integrals from/to disk [ Write | Read | None ] 
interface: ezfio,provider,ocaml
default: None

[df_ao_integrals_complex]
type: double precision
doc: Real part of the df integrals over AOs
size: (2,ao_basis.ao_num_per_kpt,ao_basis.ao_num_per_kpt,ao_two_e_ints.df_num,nuclei.kpt_pair_num)
interface: ezfio

[chol_num]
type: integer
doc: number of cholesky vecs for each kpt
size: (nuclei.unique_kpt_num)
interface: ezfio, provider

[chol_num_max]
type: integer
doc: max number of cholesky vecs
interface: ezfio, provider

[io_chol_ao_integrals]
type: Disk_access
doc: Read/Write chol |AO| integrals from/to disk [ Write | Read | None ] 
interface: ezfio,provider,ocaml
default: None

[chol_ao_integrals_complex]
type: double precision
doc: Cholesky decomposed integrals over AOs
size: (2,ao_basis.ao_num_per_kpt,ao_basis.ao_num_per_kpt,ao_two_e_ints.chol_num_max,nuclei.kpt_num,nuclei.unique_kpt_num)
interface: ezfio

