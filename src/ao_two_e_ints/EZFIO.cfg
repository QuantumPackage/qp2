[io_ao_two_e_integrals]
type: Disk_access
doc: Read/Write |AO| integrals from/to disk [ Write | Read | None ] 
interface: ezfio,provider,ocaml
default: None

[io_ao_cholesky]
type: Disk_access
doc: Read/Write |AO| Cholesky integrals from/to disk [ Write | Read | None ] 
interface: ezfio,provider,ocaml
default: None

[ao_integrals_threshold]
type: Threshold
doc: If | (pq|rs) | < `ao_integrals_threshold` then (pq|rs) is zero
interface: ezfio,provider,ocaml
default: 1.e-15
ezfio_name: threshold_ao

[ao_cholesky_threshold]
type: Threshold
doc: If | (ii|jj) | < `ao_cholesky_threshold` then (ii|jj) is zero
interface: ezfio,provider,ocaml
default: 1.e-12


[do_ao_cholesky]
type: logical
doc: Perform Cholesky decomposition of AO integrals
interface: ezfio,provider,ocaml
default: True

[io_ao_two_e_integrals_erf]
type: Disk_access
doc: Read/Write |AO| erf integrals from/to disk [ Write | Read | None ] 
interface: ezfio,provider,ocaml
default: None

[use_only_lr]
type: logical
doc: If true, use only the long range part of the two-electron integrals instead of 1/r12
interface: ezfio, provider, ocaml
default: False
